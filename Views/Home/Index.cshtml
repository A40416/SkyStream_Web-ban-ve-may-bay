@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_LayoutWeb.cshtml";
}
<style>
    .date-picker-container {
        background-color: white;
        border: 1px solid #ccc;
        z-index: 1000;
    }

    .date-picker {
        width: 200px;
        height: 30px;
    }
</style>
<form action="index.html" method="get" class="tm-search-form tm-section-pad-2">
    <div class="form-row tm-search-form-row">
        <div class="form-group tm-form-element tm-form-element-100">
            <i class="fa fa-map-marker fa-2x tm-form-element-icon"></i>
            <input name="city" type="text" class="form-control" id="inputCity" placeholder="Điểm đi">
        </div>
        <div class="form-group tm-form-element tm-form-element-100">
            <i class="fa fa-map-marker fa-2x tm-form-element-icon"></i>
            <input name="city" type="text" class="form-control" id="inputCity" placeholder="Điểm đến">
        </div>
        <div class="form-group tm-form-element tm-form-element-50">
            <i class="fa fa-calendar fa-2x tm-form-element-icon"></i>
            <input id="fromDate" name="fromDate" type="text" class="form-control" placeholder="Ngày đi" autocomplete="off" />
        </div>
    </div>
    <div class="form-row tm-search-form-row">
        <div class="form-group tm-form-element tm-form-element-50" id="returnDateGroup" style="display: none;">
            <i class="fa fa-calendar fa-2x tm-form-element-icon"></i>
            <input id="toDate" name="toDate" type="text" class="form-control" placeholder="Ngày về" autocomplete="off" />
        </div>
    </div>
    <div class="form-row tm-search-form-row">
        <div class="form-group tm-form-element tm-form-element-2">
            <select name="adult" class="form-control tm-select" id="adult">
                <option value="">Người lớn</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
            </select>
            <i class="fa fa-2x fa-user tm-form-element-icon"></i>
        </div>
        <div class="form-group tm-form-element tm-form-element-2">
            <select name="children" class="form-control tm-select" id="children">
                <option value="">Trẻ em</option>
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
            </select>
            <i class="fa fa-user tm-form-element-icon tm-form-element-icon-small"></i>
        </div>
        <div class="form-group tm-form-element tm-form-element-2">
            <select name="room" class="form-control tm-select" id="room" onchange="toggleReturnDate()">
                <option value="">Chuyến đi</option>
                <option value="1">Khứa hồi</option>
                <option value="2">Một chiều</option>
            </select>
            <i class="fa fa-2x fa-plane tm-form-element-icon"></i>
        </div>
        <div class="form-group tm-form-element tm-form-element-2">
            <button type="submit" class="btn btn-primary tm-btn-search">Check Availability</button>
        </div>
    </div>
</form>
<script>
    function toggleReturnDate() {
        var selectedValue = document.getElementById("room").value;
        var returnDateGroup = document.getElementById("returnDateGroup");

        if (selectedValue === "1") { // If "Khứa hồi" is selected
            returnDateGroup.style.display = "block"; // Display the return date field
        } else {
            returnDateGroup.style.display = "none"; // Hide the return date field
        }
    }
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy ra các trường input "fromDate" và "toDate"
        var fromDateInput = document.getElementById("fromDate");
        var toDateInput = document.getElementById("toDate");

        // Hàm để chuyển định dạng từ yyyy-mm-dd sang dd/mm/yyyy
        function formatDate(date) {
            var d = new Date(date),
                day = '' + d.getDate(),
                month = '' + (d.getMonth() + 1),
                year = d.getFullYear();

            if (day.length < 2)
                day = '0' + day;
            if (month.length < 2)
                month = '0' + month;

            return [day, month, year].join('/');
        }

        // Tạo hàm để hiển thị bảng chọn ngày tháng năm
        function showDatePicker(input) {
            var datePickerContainer = document.createElement("div");
            datePickerContainer.className = "date-picker-container";

            // Tạo bảng chọn ngày tháng năm
            var datePicker = document.createElement("input");
            datePicker.type = "date";
            datePicker.className = "date-picker";

            // Xác định vị trí cho bảng chọn
            var rect = input.getBoundingClientRect();
            datePickerContainer.style.position = "absolute";
            datePickerContainer.style.top = rect.bottom + "px";
            datePickerContainer.style.left = rect.left + "px";

            // Xác định ngày hiện tại
            var currentDate = new Date();
            var minDate = currentDate.toISOString().split("T")[0]; // Lấy ngày hiện tại dưới dạng chuỗi ISO

            // Thiết lập thuộc tính min cho datePicker để ngăn người dùng chọn ngày nhỏ hơn ngày hiện tại
            datePicker.min = minDate;

            // Gán sự kiện khi chọn ngày tháng năm
            datePicker.addEventListener("change", function () {
                if (this.value < minDate) {
                    alert("Bạn không thể chọn ngày nhỏ hơn ngày hiện tại.");
                    this.value = minDate;
                }
                input.value = formatDate(this.value); // Format lại ngày tháng năm
                datePickerContainer.remove();
            });

            // Thêm bảng chọn vào container và container vào body
            datePickerContainer.appendChild(datePicker);
            document.body.appendChild(datePickerContainer);

            // Sự kiện để đóng bảng chọn nếu click ngoài
            document.addEventListener("click", function (event) {
                if (!datePickerContainer.contains(event.target) && event.target !== input) {
                    datePickerContainer.remove();
                }
            });
        }

        // Sự kiện khi click vào trường "fromDate"
        fromDateInput.addEventListener("focus", function () {
            showDatePicker(this);
        });

        // Sự kiện khi click vào trường "toDate"
        toDateInput.addEventListener("focus", function () {
            showDatePicker(this);
        });

    });
</script>